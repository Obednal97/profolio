enum AssetType {
  CRYPTO
  STOCK
  PROPERTY
  EQUITY
  OTHER
  BOND
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(uuid())
  password    String
  email       String      @unique
  name        String?
  taxCountry  String?
  taxRate     Int? // stored as basis points, e.g. 0.25 => 2500
  assets      Asset[]
  liabilities Liability[]
  expenses    Expense[]
  properties Property[]
  settings    Settings?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Asset {
  id            String  @id @default(uuid())
  userId        String
  name          String
  type          AssetType
  symbol        String?
  quantity      Int    // stored in micro-units, e.g. 1.234 => 1234000
  source        String?
  externalId    String?
  currency      String?
  valueOverride Int?   // stored in pence/cents, e.g. £10.99 => 1099
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Liability {
  id           String    @id @default(uuid())
  userId       String
  name         String
  balance      Int     // stored in pence/cents, e.g. £45,000.23 => 4500023
  interestRate Int     // stored as basis points, e.g. 3.5% => 3500
  dueDate      DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Expense {
  id        String   @id @default(uuid())
  amount    Float
  category  String
  date      DateTime
  notes     String?
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Settings {
  userId   String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  theme    String?
  currency String?
  timezone String?
  user     User     @relation(fields: [userId], references: [id])
}

model Property {
  id           String   @id @default(uuid())
  address      String
  value        Int      // stored in pence/cents, e.g. £230,000.00 => 23000000
  purchaseDate DateTime
  notes        String?
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}